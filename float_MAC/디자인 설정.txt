SYN_TOPO로 이동해서
dc_shell
define_design_lib WORK -path “work”
source rm_setup/lib_setup.tcl
check_library
analyze -library WORK -format verilog ../RTL/mul_A.v
elaborate -architecture verilog -param bw=16 -library WORK mul_A
check_design
set INPUTPORT [remove_from_collection [all_inputs] [get_ports "CLK RESETn"]]
set OUTPUTPORT [all_outputs]
set_load [load_of saed32rvt_ff1p16vn40c/NBUFFX2_RVT/A] $OUTPUTPORT
set_driving_cell -library saed32rvt_ff1p16vn40c -lib_cell NBUFFX2_RVT -pin Y -no_design_rule $INPUTPORT
set_operating_conditions ff1p16vn40c -library saed32rvt_ff1p16vn40c
create_clock -period 5 -name MAIN_CLOCK [get_ports CLK]
set_clock_uncertainty 0.5 [get_clocks MAIN_CLOCK]
set_input_delay -clock MAIN_CLOCK -max 2.0 [remove_from_collection [all_inputs] CLK]
set_output_delay -clock MAIN_CLOCK -max 2.0 [all_outputs]
set_max_area 0
compile -area_effort medium -map_effort high
	

report_area > reports/synth_area.rpt
report_design > reports/synth_design.rpt
report_cell > reports/synth_cells.rpt
report_qor > reports/synth_qor.rpt
report_resources > reports/synth_resources.rpt
report_timing -max_paths 10 > reports/synth_timing.rpt
report_power -analysis_effort medium > reports/synth_power.rpt


write_sdc results/fp16MAC.sdc -version 2.1
write -f ddc -hierarchy -output results/fp16MAC.ddc
write -hierarchy -format verilog -output results/fp16MAC_HDL.v

